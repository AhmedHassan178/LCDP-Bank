/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lcdp.bank;

import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import static lcdp.bank.Bank.b;

/**
 *
 * @author as
 */
public  class WITHDRAWPAGE extends javax.swing.JFrame {

    /**
     * Creates new form WITHDRAWPAGE
     */
   
//public int i;
//public int s;
   
    
    public WITHDRAWPAGE() throws IOException {
          

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        CREDITWD = new javax.swing.JButton();
        WDAMOUNT = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        WDTOLOGOUT = new javax.swing.JButton();
        WDTOMENU = new javax.swing.JButton();
        ACCOUNTWD = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(null);

        CREDITWD.setBackground(new java.awt.Color(85, 5, 14));
        CREDITWD.setFont(new java.awt.Font("Compacta BT", 0, 24)); // NOI18N
        CREDITWD.setForeground(new java.awt.Color(255, 255, 255));
        CREDITWD.setText("FROM CREDIT CARD");
        CREDITWD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CREDITWDActionPerformed(evt);
            }
        });
        jPanel1.add(CREDITWD);
        CREDITWD.setBounds(270, 450, 190, 40);

        WDAMOUNT.setFont(new java.awt.Font("Compacta BT", 0, 18)); // NOI18N
        WDAMOUNT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(85, 5, 14), 4));
        WDAMOUNT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WDAMOUNTActionPerformed(evt);
            }
        });
        WDAMOUNT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                WDAMOUNTKeyPressed(evt);
            }
        });
        jPanel1.add(WDAMOUNT);
        WDAMOUNT.setBounds(160, 340, 420, 40);

        jLabel2.setFont(new java.awt.Font("Compacta BT", 0, 24)); // NOI18N
        jLabel2.setText("THE AMOUNT");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(160, 280, 170, 80);

        WDTOLOGOUT.setBackground(new java.awt.Color(85, 5, 14));
        WDTOLOGOUT.setFont(new java.awt.Font("Compacta BT", 0, 24)); // NOI18N
        WDTOLOGOUT.setForeground(new java.awt.Color(255, 255, 255));
        WDTOLOGOUT.setText("LOG OUT");
        WDTOLOGOUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WDTOLOGOUTActionPerformed(evt);
            }
        });
        jPanel1.add(WDTOLOGOUT);
        WDTOLOGOUT.setBounds(450, 20, 130, 40);

        WDTOMENU.setBackground(new java.awt.Color(85, 5, 14));
        WDTOMENU.setFont(new java.awt.Font("Compacta BT", 0, 24)); // NOI18N
        WDTOMENU.setForeground(new java.awt.Color(255, 255, 255));
        WDTOMENU.setText("BACK TO MENU");
        WDTOMENU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WDTOMENUActionPerformed(evt);
            }
        });
        jPanel1.add(WDTOMENU);
        WDTOMENU.setBounds(270, 20, 170, 40);

        ACCOUNTWD.setBackground(new java.awt.Color(85, 5, 14));
        ACCOUNTWD.setFont(new java.awt.Font("Compacta BT", 0, 24)); // NOI18N
        ACCOUNTWD.setForeground(new java.awt.Color(255, 255, 255));
        ACCOUNTWD.setText("FROM YOUR ACCOUNT");
        ACCOUNTWD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ACCOUNTWDActionPerformed(evt);
            }
        });
        jPanel1.add(ACCOUNTWD);
        ACCOUNTWD.setBounds(270, 400, 190, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lcdp/bank/W I T H D R A W.jpg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 600, 770);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CREDITWDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CREDITWDActionPerformed
      
        if(  WDAMOUNT.getText().isEmpty()){
             new NOINPUT().setVisible(true);
         }
         else{
        if (Bank.flag){
         if (Integer.parseInt(WDAMOUNT.getText()) <= (20000 - b[Bank.i].getDebt())){
            
         b[Bank.i].drawCredit(Integer.parseInt(WDAMOUNT.getText()));
         b[Bank.i].setDebt();
         REPAY REP = new REPAY();
         REP.TIMEREPAY.setText(b[Bank.i].getPeriod());
         REP.setVisible(true);
            }
        else {
        LIMIT lim = new LIMIT();
            lim.setVisible(true);
        
        }
        }
        else{
        if (Integer.parseInt(WDAMOUNT.getText()) <= (10000 - b[Bank.i].getDebt())){
         b[Bank.i].drawCredit(Integer.parseInt(WDAMOUNT.getText()));
         b[Bank.i].setDebt();
         REPAY REP = new REPAY();
         REP.TIMEREPAY.setText(b[Bank.i].getPeriod());
         REP.setVisible(true);
        }
        else {
        LIMIT lim = new LIMIT();
            lim.setVisible(true);
        }
                }
         
         this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        }
    }//GEN-LAST:event_CREDITWDActionPerformed

    private void WDAMOUNTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WDAMOUNTActionPerformed

    }//GEN-LAST:event_WDAMOUNTActionPerformed

    private void WDTOLOGOUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WDTOLOGOUTActionPerformed
                      try {
                          new LOGIN().setVisible(true);
                      } catch (IOException ex) {
                          Logger.getLogger(WITHDRAWPAGE.class.getName()).log(Level.SEVERE, null, ex);
                      }
      this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_WDTOLOGOUTActionPerformed

    private void WDTOMENUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WDTOMENUActionPerformed
      MENU m = new MENU();
      String s1 = b[Bank.i].getFirstname();
      String s2 = b[Bank.i].getLastname();
      m.setVisible(true);
      m.jLabel2.setText("Hello"+"  "+s1+" "+s2);
      this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_WDTOMENUActionPerformed

    private void ACCOUNTWDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ACCOUNTWDActionPerformed
   if(  WDAMOUNT.getText().isEmpty()){
             new NOINPUT().setVisible(true);
         }
         else{
        b[Bank.i].setDailylimit(Integer.parseInt(WDAMOUNT.getText()));
      if ( Bank.flag ){
        if (b[Bank.i].getDailylimit()<=20000 && Integer.parseInt(WDAMOUNT.getText())<=20000  ){
        if ( b[Bank.i].checkBalance() >= Integer.parseInt(WDAMOUNT.getText())){    
          b[Bank.i].draw(Integer.parseInt(WDAMOUNT.getText()));
         new DONE().setVisible(true);
         this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        }else {
        CREDITORNO cr = new CREDITORNO();
        int bal = b[Bank.i].checkBalance();
        String s = Integer.toString(bal);
        Bank.gooo = Integer.parseInt(WDAMOUNT.getText());
        cr.YOURCREDIT.setText(s);
        cr.setVisible(true);
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        }
        }
        else {
        DAILYLIMIT lim = new DAILYLIMIT();
         lim.setVisible(true);
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        b[Bank.i].setDailylimit(-Integer.parseInt(WDAMOUNT.getText()));
        }
        }
        else {
        if (b[Bank.i].getDailylimit()<=10000 && Integer.parseInt(WDAMOUNT.getText())<=10000  ){
        if ( b[Bank.i].checkBalance() >=Integer.parseInt(WDAMOUNT.getText())){    
          b[Bank.i].draw(Integer.parseInt(WDAMOUNT.getText()));
         new DONE().setVisible(true);
         this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        }else {
        CREDITORNO cr = new CREDITORNO();
        int bal = b[Bank.i].checkBalance();
        String s = Integer.toString(bal);
        Bank.gooo = Integer.parseInt(WDAMOUNT.getText());
        cr.YOURCREDIT.setText(s);
        cr.setVisible(true);
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        }
        }
        else {
        DAILYLIMIT lim = new DAILYLIMIT();
         lim.setVisible(true);
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        b[Bank.i].setDailylimit(-Integer.parseInt(WDAMOUNT.getText()));
        }

        }
   }     
    }//GEN-LAST:event_ACCOUNTWDActionPerformed

    private void WDAMOUNTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_WDAMOUNTKeyPressed
char C = evt.getKeyChar();
String user = WDAMOUNT.getText();
int length = user.length();

        if(Character.isISOControl(C)||(Character.isDigit(C) && length<=8 )){
    WDAMOUNT.setEditable(true);
   
   }

else{
     WDAMOUNT.setEditable(false);
}            
    }//GEN-LAST:event_WDAMOUNTKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WITHDRAWPAGE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WITHDRAWPAGE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WITHDRAWPAGE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WITHDRAWPAGE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
               
                try {
                    new WITHDRAWPAGE().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(WITHDRAWPAGE.class.getName()).log(Level.SEVERE, null, ex);
                }
             
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ACCOUNTWD;
    private javax.swing.JButton CREDITWD;
    public static javax.swing.JTextField WDAMOUNT;
    private javax.swing.JButton WDTOLOGOUT;
    private javax.swing.JButton WDTOMENU;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
